<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wanban.dao.ReleasesMapper">
  <resultMap id="BaseResultMap" type="com.wanban.pojo.Releases">
  <id column="release_id" jdbcType="INTEGER" property="releaseId" />
  <result column="release_time" jdbcType="TIMESTAMP" property="releaseTime" />
  <result column="sport_time" jdbcType="TIMESTAMP" property="sportTime" />
  <result column="sport_place" jdbcType="VARCHAR" property="sportPlace" />
  <result column="types" jdbcType="VARCHAR" property="types" />
  <result column="status" jdbcType="INTEGER" property="status" />
  <result column="user_id" jdbcType="INTEGER" property="userId" />
</resultMap>

  <resultMap id="ReleaseResultMap" type="com.wanban.pojo.Releases">
    <id column="release_id" jdbcType="INTEGER" property="releaseId" />
    <result column="release_time" jdbcType="TIMESTAMP" property="releaseTime" />
    <result column="sport_time" jdbcType="TIMESTAMP" property="sportTime" />
    <result column="sport_place" jdbcType="VARCHAR" property="sportPlace" />
    <result column="types" jdbcType="VARCHAR" property="types" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <association property="user" column="user_id" select="com.wanban.dao.UserMapper.selectByPrimaryKey"></association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    release_id, release_time, sport_time, sport_place, types, status, user_id
  </sql>
  <select id="selectByExample" parameterType="com.wanban.pojo.ReleasesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from releases
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from releases
    where release_id = #{releaseId,jdbcType=INTEGER}
  </select>

  <!-- list-->
  <select id="list" parameterType="Map" resultMap="ReleaseResultMap">
    select * from releases
    <where>
      <if test="status!=null and status != ''">
        and status=#{status}
      </if>
      <if test="types!=null and types!='' ">
        and types like #{types}
      </if>
      <if test="userId!=null and userId!='' ">
        and user_id = #{userId}
      </if>
    </where>
    order by release_time DESC
    <if test="start!=null and size!=null">
      limit #{start},#{size}
    </if>
  </select>

  <!-- getTotal -->
  <select id="getTotal" parameterType="Map" resultType="Long">
    select count(*) from releases
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from releases
    where release_id = #{releaseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wanban.pojo.ReleasesExample">
    delete from releases
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wanban.pojo.Releases">
    insert into releases (release_id, release_time, sport_time, 
      sport_place, types, status, 
      user_id)
    values (#{releaseId,jdbcType=INTEGER}, now(), #{sportTime,jdbcType=TIMESTAMP},
      #{sportPlace,jdbcType=VARCHAR}, #{types,jdbcType=VARCHAR}, 0,
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wanban.pojo.Releases">
    insert into releases
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="releaseId != null">
        release_id,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
      <if test="sportTime != null">
        sport_time,
      </if>
      <if test="sportPlace != null">
        sport_place,
      </if>
      <if test="types != null">
        types,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="releaseId != null">
        #{releaseId,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        now(),
      </if>
      <if test="sportTime != null">
        #{sportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sportPlace != null">
        #{sportPlace,jdbcType=VARCHAR},
      </if>
      <if test="types != null">
        #{types,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wanban.pojo.ReleasesExample" resultType="java.lang.Long">
    select count(*) from releases
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update releases
    <set>
      <if test="record.releaseId != null">
        release_id = #{record.releaseId,jdbcType=INTEGER},
      </if>
      <if test="record.releaseTime != null">
        release_time = #{record.releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sportTime != null">
        sport_time = #{record.sportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sportPlace != null">
        sport_place = #{record.sportPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.types != null">
        types = #{record.types,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update releases
    set release_id = #{record.releaseId,jdbcType=INTEGER},
      release_time = #{record.releaseTime,jdbcType=TIMESTAMP},
      sport_time = #{record.sportTime,jdbcType=TIMESTAMP},
      sport_place = #{record.sportPlace,jdbcType=VARCHAR},
      types = #{record.types,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wanban.pojo.Releases">
    update releases
    <set>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sportTime != null">
        sport_time = #{sportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sportPlace != null">
        sport_place = #{sportPlace,jdbcType=VARCHAR},
      </if>
      <if test="types != null">
        types = #{types,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where release_id = #{releaseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wanban.pojo.Releases">
    update releases
    set release_time = #{releaseTime,jdbcType=TIMESTAMP},
      sport_time = #{sportTime,jdbcType=TIMESTAMP},
      sport_place = #{sportPlace,jdbcType=VARCHAR},
      types = #{types,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where release_id = #{releaseId,jdbcType=INTEGER}
  </update>
</mapper>